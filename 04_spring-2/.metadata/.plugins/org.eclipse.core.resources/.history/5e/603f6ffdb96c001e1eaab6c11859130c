package org.galapagos.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

import lombok.extern.log4j.Log4j;

@Configuration
@EnableWebSecurity
@Log4j

public class SecurityConfig extends WebSecurityConfigurerAdapter {

	@Override
	public void configure(HttpSecurity http) throws Exception {
		http.authorizeRequests()
		    .antMatchers("/security/all").permitAll()
		    .antMatchers("/security/admin").access("hasRole('ROLE_ADMIN')")
		    .antMatchers("/security/member").access("hasRole('ROLE_MEMBER')");
	
		http.formLogin()
		.loginPage("/security/login") // 로그인 페이지 경로
		.loginProcessingUrl("/security/login") //제출버튼 누르면 검증
		.defaultSuccessUrl("/"); //로그인 성공시 홈으로
		
		
		http.formLogin();
	}
	
	@Override
	protected void configure (AuthenticationManagerBuilder auth) throws Exception {
		log.info("configure..............................");
		
		auth.inMemoryAuthentication()
		.withUser("admin")
		.password("{noop}1234")
		.roles("ADMIN");
		
		auth.inMemoryAuthentication()
		.withUser("member")
		.password("{noop}1234")
		.roles("MEMBER");
	}
}
